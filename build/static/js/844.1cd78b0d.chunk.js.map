{"version":3,"file":"static/js/844.1cd78b0d.chunk.js","mappings":"0MA4FA,QApFA,WAEI,MAAM,EAACA,EAAC,KAAEC,IAAQC,EAAAA,EAAAA,OACZ,QAACC,GAAWC,EAAAA,EAAIC,UACfC,EAAOC,IAAYC,EAAAA,EAAAA,MAGnBC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAc,IAI1CC,EAAsBC,IAC1B,GAAIC,MAAMD,GACR,OAAOA,EAETA,EAAc,GAAKA,EAEnB,IACIE,GAFJF,EAAcG,WAAWH,IACCI,gBACHC,MAAM,4BAE3B,OADWL,EAAYM,QAAQC,KAAKC,IAAI,GAAIN,EAAS,IAAM,IAAIO,OAASP,EAAS,IACpE,EAcjB,IAAIQ,GAAS,GAEbC,EAAAA,EAAAA,YAAU,KACNC,iBACSF,GACEjB,EAAMoB,UAhBED,WACnB,UACUE,EAAAA,EAAQC,IAAI,gCAAgCC,MAAKC,IACnDpB,EAAaoB,EAAIC,KAAKC,OAAO,GAErC,CAAE,MAAOC,GACLC,QAAQC,IAAIF,EAChB,GAUYG,EAGZ,CAEAC,GAEO,KACHd,GAAS,CAAI,IAGd,IAIP,MAAMe,EAAeA,IACbhC,EAAMoB,UAEFa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACrBF,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAACC,KAAK,aAGTJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,IAIjB,OACIL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SACzBhC,GACGA,EAAUa,OAAS,EACfb,EAAUoC,KAAI,CAACC,EAAWC,KACtBC,EAAAA,EAAAA,MAAA,OAAKR,UAA+B,GAApB/B,EAAUa,OAAc,uBAAyB,oBAAoBmB,SAAA,EACjFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAAEK,EAAKG,UACpCV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAAE7B,EAAmBkC,EAAKI,cAFgCH,MAOjGR,EAAAA,EAAAA,KAACD,EAAY,KAI/B,C","sources":["pages/integral/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { App , Spin} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport {useStore} from '../../utils/store'\nimport copy from 'copy-to-clipboard';\nimport {request} from '../../api/request'\nimport Web3 from \"web3\"\n\nfunction Integral() {\n\n    const {t, i18n} = useTranslation()\n    const {message} = App.useApp()\n    const [state, dispatch] = useStore();\n    \n    \n    const [pirceList, setPirceList] = useState<any>([]);\n\n\n    //科学技术方法\n    const scientificToNumber = (inputNumber:any)=>{\n      if (isNaN(inputNumber)) {\n        return inputNumber\n      }\n      inputNumber = '' + inputNumber\n      inputNumber = parseFloat(inputNumber)\n      let eformat = inputNumber.toExponential() // 转换为标准的科学计数法形式（字符串）\n      let tmpArray = eformat.match(/\\d(?:\\.(\\d*))?e([+-]\\d+)/) // 分离出小数值和指数值\n      let number = inputNumber.toFixed(Math.max(0, (tmpArray[1] || '').length - tmpArray[2]))\n        return number \n    }\n    \n    const getPriceTotal =  async() => {\n        try {\n            await request.get('/point_trade/get_user_assets').then(res => {\n                setPirceList(res.data.assets)\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n\n    let ignore = false;\n\n    useEffect(() => {\n        async function startFetching() {\n            if (!ignore) {\n                if(state.userName){\n                    getPriceTotal()\n                }\n            }\n        }\n\n        startFetching();\n\n        return () => {\n            ignore = true;\n        };\n\n        }, []);\n\n    \n\n    const LonadingHtml = () => {\n        if (state.userName) {\n            return  (\n                <div className=\"loading\" >\n                   <Spin size=\"large\" />\n                </div >)\n        } else {\n            return  (<></>)\n        }\n    }\n\n    return (\n        <div className=\"db-table-main\">\n            {pirceList &&\n                pirceList.length > 0 ? (\n                    pirceList.map((item: any, index: number) => (\n                        <div className={pirceList.length == 1 ? \"table-points-oneinfo\" : \"table-points-info\"} key={index}>\n                            <div className=\"table-points\">{item.symbol}</div>\n                            <div className=\"table-points\">{scientificToNumber(item.quantity)}</div>\n                        </div>\n                        ))\n                    \n                    ) : (\n                  <LonadingHtml/>\n             )}\n            </div>\n        )\n}\n\nexport default Integral;"],"names":["t","i18n","useTranslation","message","App","useApp","state","dispatch","useStore","pirceList","setPirceList","useState","scientificToNumber","inputNumber","isNaN","tmpArray","parseFloat","toExponential","match","toFixed","Math","max","length","ignore","useEffect","async","userName","request","get","then","res","data","assets","error","console","log","getPriceTotal","startFetching","LonadingHtml","_jsx","className","children","Spin","size","_Fragment","map","item","index","_jsxs","symbol","quantity"],"sourceRoot":""}