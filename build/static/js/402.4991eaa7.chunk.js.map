{"version":3,"file":"static/js/402.4991eaa7.chunk.js","mappings":"kMAsEA,QA9DA,WAEI,MAAM,EAACA,EAAC,KAAEC,IAAQC,EAAAA,EAAAA,OACZ,QAACC,GAAWC,EAAAA,EAAIC,UACfC,EAAOC,IAAYC,EAAAA,EAAAA,MACnBC,EAAQC,IAAaC,EAAAA,EAAAA,UAAc,IAa1C,IAAIC,GAAS,EAqBb,OAnBAC,EAAAA,EAAAA,YAAU,KACNC,iBACSF,GACEN,EAAMS,UAhBJD,WACb,UACUE,EAAAA,EAAQC,IAAI,gCAAgCC,MAAKC,IACnDT,EAAUS,EAAIC,KAAKC,OAAO,GAElC,CAAE,MAAOC,GACNC,QAAQC,IAAIF,EACf,GAUYG,EAGZ,CAEAC,GAEO,KACHd,GAAS,CAAI,IAGd,KAKHe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SACzBvB,EAAMS,UAAYY,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAD,SAClBpB,GACGA,EAAOsB,OAAS,GAChBtB,EAAOuB,KAAI,CAACC,EAAWC,KACnBC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iBAAgBC,SAAA,EAC3BM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,YAAY,SAAa,OAAXiC,EAAKG,KAAa,GAAEpC,EAAE,cAAe,GAAEA,EAAE,mBACtFmC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,SAAS,SAAEiC,EAAKI,WAC/CF,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,aAAa,SAAoB,GAAlBiC,EAAKK,YAAoB,GAAEtC,EAAE,kBAAmB,GAAEA,EAAE,sBAClGmC,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,iBAAiB,SAAEiC,EAAKM,oBACvDJ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,SAAS,SAAEiC,EAAKO,UAC/CL,EAAAA,EAAAA,MAAA,OAAKP,UAAU,aAAYC,SAAA,CAAE7B,EAAE,eAAe,SAAmB,SAAjBiC,EAAKQ,WAAqB,GAAEzC,EAAE,iBAAkB,GAAEA,EAAE,qBACpG2B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAEI,EAAKS,gBARTR,QAYrCP,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,KAGpB,C","sources":["pages/myorder/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { App , Spin , Pagination ,Button, Modal} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport {useStore} from '../../utils/store'\nimport copy from 'copy-to-clipboard';\nimport {request} from '../../api/request'\nimport {Link, useLocation} from 'react-router-dom'\n\nfunction MyOrder() {\n\n    const {t, i18n} = useTranslation()\n    const {message} = App.useApp()\n    const [state, dispatch] = useStore();\n    const [isList, setIsList] = useState<any>([])\n\n    const getList =  async () => {\n        try {\n            await request.get('/point_trade/get_user_orders').then(res => {\n                setIsList(res.data.orders)\n           })\n        } catch (error) {\n           console.log(error)\n        }\n    }\n\n\n    let ignore = false;\n\n    useEffect(() => {\n        async function startFetching() {\n            if (!ignore) {\n                if(state.userName){\n                    getList()\n                }\n            }\n        }\n\n        startFetching();\n\n        return () => {\n            ignore = true;\n        };\n\n        }, []);\n\n\n\n    return (\n        <div className=\"db-table-main\">\n            {state.userName ? (<>\n            {isList &&\n                isList.length > 0 &&\n                isList.map((item: any, index: number) => (\n                    <div className=\"list-item-info\" key={index}>\n                        <div className=\"item-title\">{t(\"sideType\")}：{item.side==\"buy\"?`${t(\"limitBuy\")}`:`${t(\"limitSell\")}`}</div>\n                        <div className=\"item-title\">{t(\"token\")}：{item.symbol}</div>\n                        <div className=\"item-title\">{t(\"Isitadeal\")}：{item.has_matched==false?`${t(\"transactionF\")}`:`${t(\"transactionT\")}`}</div>\n                        <div className=\"item-title\">{t(\"tradingvolume\")}：{item.filled_quantity}</div>\n                        <div className=\"item-title\">{t(\"Price\")}：{item.price}</div>\n                        <div className=\"item-title\">{t(\"pricingType\")}：{item.order_type==\"limit\"?`${t(\"limittorder\")}`:`${t(\"marketorder\")}`}</div>\n                        <div className=\"item-foot\">\n                            <span className=\"db-table-time\">{item.timestamp}</span>\n                        </div>\n                    </div>\n                    ))}\n            </>) : (<></>)}\n        </div>\n        )\n}\n\nexport default MyOrder;"],"names":["t","i18n","useTranslation","message","App","useApp","state","dispatch","useStore","isList","setIsList","useState","ignore","useEffect","async","userName","request","get","then","res","data","orders","error","console","log","getList","startFetching","_jsx","className","children","_Fragment","length","map","item","index","_jsxs","side","symbol","has_matched","filled_quantity","price","order_type","timestamp"],"sourceRoot":""}