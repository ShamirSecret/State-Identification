{"version":3,"file":"static/js/503.7f6d992b.chunk.js","mappings":"8NAkHA,QA1GA,WAEI,MAAM,EAACA,EAAC,KAAEC,IAAQC,EAAAA,EAAAA,OACZ,QAACC,GAAWC,EAAAA,EAAIC,UACfC,EAAOC,IAAYC,EAAAA,EAAAA,MACnBC,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAAQC,IAAaF,EAAAA,EAAAA,UAAc,KAEnCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,GAIjCK,EAAWC,UACbF,EAAWG,OAAOC,IAClB,UACSC,EAAAA,EAAQC,IAAI,mCAAoC,CACjDC,OAAQ,CACJC,QAAS,EACTC,KAAML,EACNM,SATC,KAWPC,MAAKC,IACH,GAAqB,KAAjBA,EAAIC,KAAKC,KACT1B,EAAQ2B,MAAMH,EAAIC,KAAKzB,aACpB,CACH,MAAM,WAAE4B,EAAU,aAAGC,GAAiBL,EAAIC,KAAKA,KAC/Cf,EAAUmB,GACVtB,EAAWqB,EAAWE,MAC1B,IAER,CAAE,MAAOH,GACLI,QAAQC,IAAIL,EAChB,GAuBJ,IAAIM,GAAS,EAoBb,OAlBAC,EAAAA,EAAAA,YAAU,KACNpB,iBACSmB,GACE9B,EAAMgC,UACLtB,EAAQV,EAAMiC,UAG1B,CAEAC,GAEO,KACHJ,GAAS,CAAI,IAGd,CAAC9B,EAAMiC,aAIVE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SACzBrC,EAAMgC,UAAYM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,CAClB/B,GACGA,EAAOkC,OAAS,GAChBlC,EAAOmC,KAAI,CAACC,EAAWC,KACnBR,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,UAAYH,EAAKI,GAAGT,UAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAAEK,EAAKK,WAAW,GAAU,SACvDT,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,CAAE3C,EAAE,SAAS,SAAEgD,EAAY,MAAE,aACxDP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAEK,EAAgB,kBALzBC,KAS3CrC,GACGA,EAAOkC,OAAS,GACZL,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CACPC,eAAgB,EAChBtB,MAAOxB,EACP+C,SArFH,EAsFGC,SA7DFjC,IACdT,EAAWS,GACXR,EAAQQ,GACRjB,EAAS,CACLmD,KAAM,cACNnB,UAAWf,GACb,EAwDcmC,QAAS7C,KAET2B,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,QAEJJ,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,KAGpB,C","sources":["pages/buychart/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { App , Spin , Pagination , ConfigProvider} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport {useStore} from '../../utils/store'\nimport copy from 'copy-to-clipboard';\nimport {request} from '../../api/request'\nimport {Link, useLocation} from 'react-router-dom'\n\nfunction Buychart() {\n\n    const {t, i18n} = useTranslation()\n    const {message} = App.useApp()\n    const [state, dispatch] = useStore();\n    const [isTotal, setIsTotal] = useState<number>()\n    const [isList, setIsList] = useState<any>([])\n\n    const [nowPage, setNowPage] = useState(1);\n\n    const pageSize = 8;\n    \n    const getList =  async (value: any) => {\n        setNowPage(Number(value))\n        try {\n           await request.get('/sellpost/user_self_bought_posts', {\n                params: {\n                    sort_by: 1,\n                    page: value,\n                    per_page: pageSize\n                }\n           }).then(res => {\n                if (res.data.code != 200) {\n                    message.error(res.data.message)\n                } else {\n                    const { pagination , bought_posts } = res.data.data;\n                    setIsList(bought_posts)\n                    setIsTotal(pagination.total)\n                }\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    const onChange = (page: any) => {\n        setNowPage(page)\n        getList(page)\n        dispatch({\n            type: 'upChartPage',\n            chartPage: page\n        })\n    }\n\n    const IntegralTotal = () => {\n        if (!isTotal) {\n            return (<Spin />)\n        } else {\n            return (\n                <>{isTotal}</>\n                )\n        }\n\n    }\n\n    let ignore = false;\n\n    useEffect(() => {\n        async function startFetching() {\n            if (!ignore) {\n                if(state.userName){\n                    getList(state.chartPage)\n                }\n            }\n        }\n\n        startFetching();\n\n        return () => {\n            ignore = true;\n        };\n\n        }, [state.chartPage]);\n\n\n    return (\n        <div className=\"db-table-main\">\n            {state.userName ? (<>\n            {isList &&\n                isList.length > 0 &&\n                isList.map((item: any, index: number) => (\n                    <Link to={'/chart/' + item.id} key={index}>\n                        <div className=\"list-item-info\" >\n                            <div className=\"item-title\">{item.attributes[0]['title']}</div>\n                            <div className=\"item-title\">{t(\"Price\")}ï¼š{item['price']} point</div>\n                            <div className=\"item-foot\">\n                                <span className=\"db-table-time\">{item['timestamp']}</span>\n                            </div>\n                        </div>\n                    </Link>))}\n            {isList &&\n                isList.length > 0 ? (\n                    <Pagination\n                        defaultCurrent={1}\n                        total={isTotal}\n                        pageSize={pageSize}\n                        onChange={onChange}\n                        current={nowPage}\n                    />) : (\n                        <></>\n                        )}\n            </>) : (<></>)}\n        </div>\n        )\n}\n\nexport default Buychart;"],"names":["t","i18n","useTranslation","message","App","useApp","state","dispatch","useStore","isTotal","setIsTotal","useState","isList","setIsList","nowPage","setNowPage","getList","async","Number","value","request","get","params","sort_by","page","per_page","then","res","data","code","error","pagination","bought_posts","total","console","log","ignore","useEffect","userName","chartPage","startFetching","_jsx","className","children","_jsxs","_Fragment","length","map","item","index","Link","to","id","attributes","Pagination","defaultCurrent","pageSize","onChange","type","current"],"sourceRoot":""}