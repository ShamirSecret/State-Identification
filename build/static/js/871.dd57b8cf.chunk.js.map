{"version":3,"file":"static/js/871.dd57b8cf.chunk.js","mappings":"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","sources":["pages/mychart/index.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport {ConfigProvider, List, Pagination, App} from 'antd';\nimport {Link, useLocation} from 'react-router-dom'\nimport {request} from '../../api/request'\nimport emptyIcon from '../../assets/images/empty.png';\nimport myIcon from '../../assets/images/3.png';\nimport {useStore} from '../../utils/store'\n\nfunction Mychart() {\n\n    const {t, i18n} = useTranslation();\n\n    const location = useLocation()\n    const {message} = App.useApp()\n\n    const [isChart, setIsChart] = useState(false)\n    const [dataList, setDataList] = useState<any>([]);\n    const [artists, setArtists] = useState<any>([]);\n    const [total, setTotal] = useState(0);\n    const [nowPage, setNowPage] = useState(1);\n\n    const [state, dispatch] = useStore();\n    const pageSize = 3;\n\n    const arrayData = []\n\n    const getList = async (value: any) => {\n        try {\n            await request.get('/sellpost/user_self_posts', {\n                params: {\n                    sort_by: 1,\n                    page: value,\n                    per_page: pageSize\n                }\n            }).then(res => {\n                if (res.data.code == 200) {\n                    const posts = res.data.data.posts\n                    for (let i = 0; i < posts.length; i++) {\n                        if(Object.keys(posts[i]['attributes'][6])[0]==\"takeprofit\"){\n                            posts[i]['takeprofit'] = posts[i]['attributes'][6]['takeprofit']\n                        }else{\n                            posts[i]['takeprofit'] = posts[i]['attributes'][6]['takeprofit1']\n                        }\n                        posts[i]['str'] = getProportion(posts[i]['attributes'][3]['trend'], posts[i]['attributes'][4]['price'], posts[i]['attributes'][5]['stoplossprice'],  posts[i]['takeprofit'])\n\n                        if(posts[i]['attributes'][8]){\n                            posts[i]['content'] = posts[i]['attributes'][8]['content']\n                        }else{\n                            posts[i]['content'] = \"-\"\n                        }\n                    }\n                    setDataList(posts)\n                    setTotal(res.data.data.pagination.total)\n                } else {\n                    message.error(res.data.message)\n                }\n\n            })\n        } catch (error) {\n            console.log(error)\n        }\n\n    };\n\n    //开单价格减去止损价格就是亏损，止盈价格减去开单价格就是盈利，盈利除以亏损就是回报比\n    const getProportion = (trend: any, price: any, stoplossprice: any, takeprofit1: any) => {\n        const loss = (trend == \"long\") ? price - stoplossprice : stoplossprice - price\n        const profit = (trend == \"long\") ? takeprofit1 - price : price - takeprofit1\n        return (Math.round(profit / loss * 100))\n    }\n\n    const onChange = (page: any) => {\n        setNowPage(page)\n        getList(page)\n    }\n\n    const delChart = async (id: any) => {\n        try {\n            await request.delete('/sellpost/delete_post_for_sell/' + id).then(res => {\n                if (res.data.code == 200) {\n                    message.success(`${t('DelTrue')}`)\n                    const newList = dataList.filter((item: any) => item.id !== id);\n                    setDataList(newList);\n                } else {\n                    message.error(res.data.error)\n                }\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    let ignore = false;\n\n    useEffect(() => {\n\n        async function startFetching() {\n            if (!ignore) {\n                getList(1)\n            }\n        }\n\n        startFetching();\n\n        return () => {\n            ignore = true;\n        };\n\n        }, []);\n\n\n    return (\n        <div className=\"chart-info\">\n\n            <div className={`add-chart ${dataList.length > 0 ? '' : 'add-empty'}`}>\n                <div className=\"personal-img\">\n                    {(state.userAvatar != null) ? <img src={state.url + state.userAvatar} alt=\"\"/> : <img src={myIcon} alt=\"\"/>}\n                </div>\n                <Link to={'/addchart'}>\n                    <div className=\"add-chart-name\"> {t('AddChart')}</div>\n                </Link>\n            </div>\n\n            <div className=\"chart-list\">\n                {dataList &&\n                    dataList.length > 0 &&\n                    dataList.map((item: any, index: number) => (\n                        <div className=\"chart-list-items\" key={index}>\n                            <div className=\"chart-items-header\">\n                                <div className=\"chart-items-title\">\n                                    {item.attributes[0]['title']}\n                                </div>\n                                <div className=\"chart-items-ratio\">\n                                    {t('ratio')}：{item.str}%\n                                </div>\n                            </div>\n                            <div className=\"chart-other-value\">\n                                <div className=\"other-value\">{t('token')}：<span> {item.attributes[1]['token']}</span>\n                                </div>\n                                <div\n                                    className=\"other-value\">{t('timePeriod')}：<span>{item.attributes[2]['timeperiod']}</span>\n                                </div>\n                                <div\n                                    className=\"other-value\">{t('trend')}：<span>{item.attributes[3]['trend'] == 'long' ? `${t('long')}` : `${t('short')}`}</span>\n                                </div>\n                                <div\n                                    className=\"other-value\">{item.attributes[3]['trend'] == 'long' ? `${t('bPrice')}` : `${t('sPrice')}`}：<span>{item.attributes[4]['price']}</span>\n                                </div>\n                                <div\n                                    className=\"other-value\">{t('SLPrice')}：<span>{item.attributes[5]['stoplossprice']}</span>\n                                </div>\n                                <div\n                                    className=\"other-value\">{t('TProfit1')}：<span>{item['takeprofit']}</span>\n                                </div>\n                                <div\n                                    className=\"logic-value\">{t('invoicelogic')}：<span>{item['content']}</span>\n                                </div>\n                            </div>\n                            <div className=\"chart-pic\">\n                                <img src={state.url+ item.image} alt=\"\"/>\n                            </div>\n                            <div className=\"chart-items-footer\">\n                                <div className=\"chart-items-time\">\n                                    {t('like')} {item.like_count}\n                                </div>\n                                <div className=\"chart-items-operate\">\n                                    <div className=\"chart-operate\" onClick={() => delChart(item.id)}>\n                                        {t('del')}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        ))}\n            </div>\n            {dataList &&\n            dataList.length > 0 ? (\n                <ConfigProvider theme={{token: {colorPrimary: '#CAAE6D'}}}>\n                    <Pagination\n                        defaultCurrent={1}\n                        total={total}\n                        pageSize={pageSize}\n                        onChange={onChange}\n                        current={nowPage}\n                    />\n                </ConfigProvider>\n                ) : (\n                    <div className=\"empty\">\n                        <img className=\"db-empty-icon\" src={emptyIcon} alt=\"empty\"/>\n                        <div className=\"db-empty-title\">{t('EmptyList')}</div>\n                    </div>\n                    )}\n        </div>\n        )\n}\n\nexport default Mychart;"],"names":["t","i18n","useTranslation","message","useLocation","App","useApp","isChart","setIsChart","useState","dataList","setDataList","artists","setArtists","total","setTotal","nowPage","setNowPage","state","dispatch","useStore","getList","async","request","get","params","sort_by","page","value","per_page","then","res","data","code","posts","i","length","Object","keys","getProportion","pagination","error","console","log","trend","price","stoplossprice","takeprofit1","loss","profit","Math","round","ignore","useEffect","startFetching","_jsxs","className","children","_jsx","userAvatar","src","url","alt","myIcon","Link","to","map","item","index","attributes","str","image","like_count","onClick","delete","id","success","newList","filter","delChart","ConfigProvider","theme","token","colorPrimary","Pagination","defaultCurrent","pageSize","onChange","current","emptyIcon"],"sourceRoot":""}